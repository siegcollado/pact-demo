schema {
  query: Query
}
interface Node {
  id: ID!
}
type PageInfo {
  hasNextPage: Boolean
  hasPreviousPage: Boolean
  startCursor: String
}
interface Record {
  createdAt: AWSDateTime
}
type Order implements Record & Node {
  product: Product
  createdAt: AWSDateTime
  id: ID!
}
type OrderEdge {
  node: Order
  cursor: String
}
type OrderConnection {
  edges: [OrderEdge!]
  pageInfo: PageInfo
}
type Product implements Record & Node {
  price: Float
  name: String!
  createdAt: AWSDateTime
  id: ID!
}
type ProductEdge {
  node: Product
  cursor: String
}
type ProductConnection {
  edges: [ProductEdge!]
  pageInfo: PageInfo
}
type Query {
  getProduct(id: ID!): Product
  allProducts(after: String first: Int before: String last: Int): ProductConnection!
}
